<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cy.pj.sys.dao.SysRoleDao">
    
    <update id="updateObject">
        update sys_roles
        set
        name=#{name},
        note=#{note},
        modifiedTime=now(),
        modifiedUser=#{modifiedUser}
        where id=#{id}
    </update>
    
    <!--  mybatis框架中实现高级映射时，采用的一种映射策略，例如
    1、自己定义字段映射（表中字段与类中属性不匹配）
    2、多表嵌套select查询
    3、多表关联查询-->
<!--————————————————————————————————————————————————————————————————————-->
    <!--方案3  多表关联查询映射-->
<!--    <resultMap id="SysRoleMenu" type="com.cy.pj.sys.pojo.SysRoleMenu">
        <id property="id" column="id"></id>
        <result property="name" column="name"></result>
        <result property="note" column="note"></result>
        <collection property="menuIds" ofType="integer">
            <result column="menu_id"/>
        </collection>
    </resultMap>
    <select id="findById" resultMap="SysRoleMenu">
        select r.id,r.name,r.note,srm.menu_id
        from sys_roles r left join sys_role_menus srm
        on r.id=srm.role_id
        where r.id=#{id}
    </select>->

<!-——————————————————————————————————————————————————————————————————-->
    <!--方案2-->
    <!-- resultMap是mybatis中高级映射的写法
    结果映射 resultMap 元素是 MyBatis 中最重要最强大的元素。
    resultMap一般用于自定义映射或一些关联查询中 -->
    <resultMap id="SysRoleMenu" type="com.cy.pj.sys.pojo.SysRoleMenu">
        <id property="id" column="id"></id>
        <result property="name" column="name"></result>
        <result property="note" column="note"></result>
        <collection property="menuIds"
                    ofType="integer"
                    select="com.cy.pj.sys.dao.SysRoleMenuDao.findMenuIdsByRoleId"
                    column="id">
        </collection>
    </resultMap>

    <select id="findById" resultMap="SysRoleMenu">
        select id,name,note
        from sys_roles
        where id=#{id}
    </select>
    <!--以上写法就是为了实现以下sql语句的功能，但是直接这样写不行-->
 <!--<select id="findById" resultType="com.cy.pj.sys.pojo.SysRoleMenu">
        select id,name,note,(select menu_id
                             from sys_role_menus rm
                             where rm.role_id=r.id) menuIds
        from sys_roles r
        where id=#{id}
    </select> -->

<!--————————————————————————————————————————————————————————————————————-->
    <!--方案1-->
<!--<select id="findById" resultType="com.cy.pj.sys.pojo.SysRoleMenu">
        select id,name,note
        from sys_roles
        where id=#{id}
    </select> -->

    <!--
     1)useGeneratedKeys 表示要使用insert操作的自增主键值
     2)keyProperty表示将insert操作后的主键值更新到参数对象的指定属性上(例如id)
     -->
    <insert id="insertObject" parameterType="com.cy.pj.sys.pojo.SysRole"
            useGeneratedKeys="true" keyProperty="id">
       insert into sys_roles
       (name,note,createdTime,modifiedTime,createdUser,modifiedUser)
       values
       (#{name},#{note},now(),now(),#{createdUser},#{modifiedUser})
    </insert>

    <delete id="deleteObject">
        delete from sys_roles
        where id=#{id}
    </delete>

    <sql id="queryWhereId">
        from sys_roles
        <where>
            <if test="name!=null and name!=''">
                name like concat("%",#{name},"%")
            </if>
        </where>
    </sql>
    <select id="getRowCount" resultType="int">
        select count(*)
        <include refid="queryWhereId"></include>
   </select>
    <select id="findPageObjects" resultType="com.cy.pj.sys.pojo.SysRole">
        select *
        <include refid="queryWhereId"></include>
        order by createdTime desc
        limit #{startIndex},#{pageSize}
    </select>
</mapper>